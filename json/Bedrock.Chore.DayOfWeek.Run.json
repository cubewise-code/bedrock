{"Parameters": [{"Prompt": "(1) Run Chore on Sunday", "Type": "Numeric", "Value": 1, "Name": "pSunday"}, {"Prompt": "(1) Run Chore on Monday", "Type": "Numeric", "Value": 1, "Name": "pMonday"}, {"Prompt": "(1) Run Chore on Tuesday", "Type": "Numeric", "Value": 1, "Name": "pTuesday"}, {"Prompt": "(1) Run Chore on Wednesday", "Type": "Numeric", "Value": 1, "Name": "pWednesday"}, {"Prompt": "(1) Run Chore on Thursday", "Type": "Numeric", "Value": 1, "Name": "pThursday"}, {"Prompt": "(1) Run Chore on Friday", "Type": "Numeric", "Value": 1, "Name": "pFriday"}, {"Prompt": "(1) Run Chore on Saturday", "Type": "Numeric", "Value": 1, "Name": "pSaturday"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "Variables": [], "HasSecurityAccess": false, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Chore.DayOfWeek.Run", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n\r\n####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 2.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will quit a chore if the day of the week index does not validate against the week parameter.\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Chore.DayOfWeek.Run';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters:    pSunday: ' | NumberToString ( pSunday) );\r\n  AsciiOutput( sDebugFile, '               pMonday: ' | NumberToString ( pMonday) );\r\n  AsciiOutput( sDebugFile, '              pTuesday: ' | NumberToString ( pTuesday) );\r\n  AsciiOutput( sDebugFile, '            pWednesday: ' | NumberToString ( pWednesday) );\r\n  AsciiOutput( sDebugFile, '             pThursday: ' | NumberToString ( pThursday) );\r\n  AsciiOutput( sDebugFile, '               pFriday: ' | NumberToString ( pFriday) );\r\n  AsciiOutput( sDebugFile, '             pSaturday: ' | NumberToString ( pSaturday) );\r\n  AsciiOutput( sDebugFile, '' );\r\n\r\nEndIf;\r\n\r\n## Get the day of the week index\r\nnDayIndex = MOD( DayNo ( TODAY ) + 21915, 7 );\r\n\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Current Day Index: ' | NumberToString ( nDayIndex ) );\r\nEndIf;\r\n\r\n## Calculate the Natural Day\r\nIF(\r\nnDayIndex = 0 );\r\n  sWeekday = 'Sunday';\r\n\r\nELSEIF(\r\nnDayIndex = 1 );\r\n  sWeekday = 'Monday';\r\n\r\nELSEIF(\r\nnDayIndex = 2 );\r\n  sWeekday = 'Tuesday';\r\n\r\nELSEIF(\r\nnDayIndex = 3 );\r\n  sWeekday = 'Wednesday';\r\n\r\nELSEIF(\r\nnDayIndex = 4 );\r\n  sWeekday = 'Thursday';\r\n\r\nELSEIF(\r\nnDayIndex = 5 );\r\n  sWeekday = 'Friday';\r\n\r\nELSEIF(\r\nnDayIndex = 6 );\r\n  sWeekday = 'Saturday';\r\n\r\nELSE;\r\n  sWeekday = '';\r\nENDIF;\r\n\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Current Day      : ' | sWeekday );\r\nEndIf;\r\n\r\n\r\n## Validate the Day of the Week index\r\nIF(\r\nnDayIndex = 0 &\r\npSunday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n## Continue\r\n\r\nELSEIF(\r\nnDayIndex = 1 &\r\npMonday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ## Continue\r\n\r\nELSEIF(\r\nnDayIndex = 2 &\r\npTuesday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ## Continue\r\n\r\nELSEIF(\r\nnDayIndex = 3 &\r\npWednesday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ## Continue\r\n\r\nELSEIF(\r\nnDayIndex = 4 &\r\npThursday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ## Continue\r\n\r\nELSEIF(\r\nnDayIndex = 5 &\r\npFriday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ## Continue\r\n\r\nELSEIF(\r\nnDayIndex = 6 &\r\npSaturday = 1 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Processing Chore on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ## Continue\r\n\r\nELSE;  \r\n  If( pDebug >= 1 );\r\n    sMessage = 'Chore quitted on ' | sWeekday | '.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n\r\n  If( pDebug <= 1 );\r\n    ChoreQuit;\r\n  EndIf;\r\nENDIF;\r\n\r\n\r\n### Initialise Debug ###\r\nIf( \r\npDebug >= 1 );\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;", "MetadataProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "DataSource": {"Type": "None"}, "EpilogProcedure": "#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "VariablesUIData": []}