{"Parameters": [{"Prompt": "Data Directory (Leave Blank to use TM1 Settings)", "Type": "String", "Value": "", "Name": "pDataDir"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 1, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Server.DataDir.ListContents", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will list all files and processes in the data directory\r\n# as text file output in the data directory itself\r\n# In some cases the path to the batch file (in the data directory) must be fully qualified\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Server.DataDir.ListContents';\r\ncUser = TM1User();\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\ncBatchFile = cProcess | '.bat';\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n  AsciiOutput( sDebugFile, 'TM1 User:        ' | cUser );\r\n  AsciiOutput( sDebugFile, '' );\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDataDir: ' | pDataDir );\r\n  AsciiOutput( sDebugFile, '' );\r\nEndIf;\r\n\r\n\r\n### Build Command ###\r\nnErrors = 0;\r\n\r\nIf( pDataDir @= '' );\r\n  # If no data directory provided then use current directory\r\n  sCommand = cBatchFile;\r\nElse;\r\n  # Trim off trailing backslash if present\r\n  If( SubSt( pDataDir, Long( pDataDir ), 1 ) @= '\\' );\r\n    pDataDir = SubSt( pDataDir, 1, Long( pDataDir ) - 1 );\r\n  EndIf;\r\n  # Check that data directory exists\r\n  If( FileExists( pDataDir ) = 0 );\r\n    nErrors = 1;\r\n    If( pDebug >= 1 );\r\n      sMessage = 'Data directory does not exist: ' | pDataDir;\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    EndIf;\r\n    ItemReject( sMessage );\r\n  Else;\r\n    sCommand = pDataDir | '\\' | cBatchFile;\r\n  EndIf;\r\nEndIf;\r\n\r\n### Create Batch File ###\r\nDatasourceASCIIQuoteCharacter='';\r\n\r\nASCIIOUTPUT( sCommand, 'dir /b /s *.* > List_All_Data_Directory_Files.txt');\r\nASCIIOUTPUT( sCommand, 'dir /b /s }*.* > List_All_Control_Objects.txt');\r\nASCIIOUTPUT( sCommand, 'dir /b *.cub > List_All_Cubes.txt');\r\n\r\nASCIIOUTPUT( sCommand, 'dir /b *.dim > List_All_Dimensions.txt');\r\nASCIIOUTPUT( sCommand, 'dir /b *.pro > List_All_Processes.txt');\r\nASCIIOUTPUT( sCommand, 'dir /b *Bedrock*.* > List_All_Bedrock_Files.txt');\r\n\r\nASCIIOUTPUT( sCommand, 'dir /b /s *.vue > List_All_Views.txt');\r\nASCIIOUTPUT( sCommand, 'dir /b /s *.sub > List_All_Subsets.txt');\r\n\r\n\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n### Initialise Debug ###\r\nIf( pDebug >= 1 );\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\nENDIF;\r\n\r\n### VALIDATION ###\r\n# Check that batch file exists\r\nIf(\r\nFileExists( sCommand ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Batch file not found: ' | sCommand;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n### Execute Batch File ###\r\nIf(\r\npDebug <= 1 &\r\nnErrors = 0 );\r\n  ExecuteCommand ( sCommand, 1 );\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, 'Command: ' | sCommand );\r\n  EndIf;\r\nEndIf;\r\n\r\n### Delete temporary batch file\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Delete: ' | sCommand );\r\nEndIf;\r\nASCIIDelete ( sCommand );\r\n\r\n\r\n### Initialise Debug ###\r\nIf( pDebug >= 1 );\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}