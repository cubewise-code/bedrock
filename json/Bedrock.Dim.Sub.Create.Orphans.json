{"Parameters": [{"Prompt": "Dimension", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Sub.Create.Orphans", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will Create a subsets for \"orphan\" elements\r\n# that is Colsols without children and Ns without parents\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Sub.Create.Orphans';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 100000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\ncSubsetOrphanC = 'Orphan C Elements (no children)';\r\ncSubsetOrphanN = 'Orphan N Elements (no parents)';\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension : ' | pDimension );\r\n\r\n  # Log subset names\r\n  AsciiOutput( sDebugFile, 'Orphan subsets for dimension        :', pDimension );\r\n  AsciiOutput( sDebugFile, 'Subset for consols without children :', cSubsetOrphanC );\r\n  AsciiOutput( sDebugFile, 'subset for level 0 without parents  :', cSubsetOrphanN );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n\r\n### Create Subsets ###\r\n\r\nIf( pDebug <= 1 );\r\n  If( SubsetExists( pDimension, cSubsetOrphanC ) = 1 );\r\n    SubsetDeleteAllElements( pDimension, cSubsetOrphanC );\r\n  Else;\r\n    SubsetCreate( pDimension, cSubsetOrphanC );\r\n  EndIf;\r\n  If( SubsetExists( pDimension, cSubsetOrphanN ) = 1 );\r\n    SubsetDeleteAllElements( pDimension, cSubsetOrphanN );\r\n  Else;\r\n    SubsetCreate( pDimension, cSubsetOrphanN );\r\n  EndIf;\r\nEndIf;\r\n\r\n\r\n### Populate subsets ###\r\n\r\nnElementCount = DimSiz( pDimension );\r\nnElementIndex = 1;\r\nnLeafCount = 0;\r\nnConsolCount = 0;\r\nWhile( nElementIndex <= nElementCount );\r\n  sElement = DimNm( pDimension, nElementIndex );\r\n  If( DType( pDimension, sElement ) @= 'N' & ElPar( pDimension, sElement, 1 ) @= '' );\r\n    # N element with no parents\r\n    nLeafCount = nLeafCount + 1;\r\n    If( pDebug <= 1 );\r\n      SubsetElementInsert( pDimension, cSubsetOrphanN, sElement, nLeafCount );\r\n    EndIf;\r\n  EndIf;\r\n  If( DType( pDimension, sElement ) @= 'C' & ElCompN( pDimension, sElement ) = 0 );\r\n    # C element with no children\r\n    nConsolCount = nConsolCount + 1;\r\n    SubsetElementInsert( pDimension, cSubsetOrphanC, sElement, nConsolCount );\r\n  EndIf;\r\n  nElementIndex = nElementIndex + 1;\r\nEnd;\r\n\r\n# Output element counts to debug file\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, cSubsetOrphanC | ' Size: ', NumberToString( nConsolCount ) );\r\n  AsciiOutput( sDebugFile, cSubsetOrphanN | ' Size: ', NumberToString( nLeafCount ) );\r\nEndIf;\r\n\r\n\r\n### Tidy up ###\r\n\r\n# If no orphans then destroy empty subsets, in debug leave empty subsets\r\nIf( pDebug <= 1 );\r\n  If( SubsetGetSize( pDimension, cSubsetOrphanN ) = 0 );\r\n    SubsetDestroy( pDimension, cSubsetOrphanN );\r\n  EndIf;\r\n  If( SubsetGetSize( pDimension, cSubsetOrphanC ) = 0 );\r\n    SubsetDestroy( pDimension, cSubsetOrphanC );\r\n  EndIf;\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}