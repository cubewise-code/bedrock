{"Parameters": [{"Prompt": "Dimension Name", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Parent Name", "Type": "String", "Value": "", "Name": "pParent"}, {"Prompt": "Element Name", "Type": "String", "Value": "", "Name": "pElement"}, {"Prompt": "Component Weight", "Type": "Numeric", "Value": 1, "Name": "pWeight"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Element.Component.Add", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will add a component to an element.\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Element.Component.Add';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension : ' | pDimension );\r\n  AsciiOutput( sDebugFile, '            pParent    : ' | pParent );\r\n  AsciiOutput( sDebugFile, '            pElement   : ' | pElement );\r\n  AsciiOutput( sDebugFile, '            pWeight    : ' | NumberToString( pWeight) );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n## Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Dimension: ' | pDimension | ' does not exist on server.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n## Validate element\r\nIf( Trim( pElement ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No element specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimIx( pDimension, pElement ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Element: ' | pElement | ' does not exist in dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n## Validate Parent\r\nIf( Trim( pParent ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No parent specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\nIf( DimIx( pDimension, pParent) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Element: ' | pParent | ' does not exist in dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n\r\n\r\nsElement = DimensionElementPrincipalName( pDimension, pElement);\r\n### Add the element component to the dimension ###\r\nIf( pDebug <= 1 );\r\n DimensionElementComponentAdd(pDimension, pParent, pElement, pWeight);\r\nEndIf;\r\n\r\nIf( pDebug >= 1 );\r\nsMessage = 'Component: ' | pElement | ' has bee added to ' | pParent | ' in ' | pDimension | ' dimension.';\r\n  AsciiOutput( sDebugFile, sMessage );\r\nEndIf;\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}