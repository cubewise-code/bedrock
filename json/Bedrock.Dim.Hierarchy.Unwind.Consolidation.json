{"Parameters": [{"Prompt": "Target Dimension", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Target Consolidation", "Type": "String", "Value": "", "Name": "pConsol"}, {"Prompt": "Boolean: 1 = True (break from node down not just direct children)", "Type": "Numeric", "Value": 0, "Name": "pRecursive"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [{"Position": 1, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "vElement"}], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Hierarchy.Unwind.Consolidation", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will remove all children from a specific target consolidation in the target dimension\r\n# If recursive will also unwind all consolidations that are children of the target regardless of depth\r\n\r\n# Note:\r\n# - If consolidations are also used in unrelated hierarchies and recursive is selected this will result in\r\n#   orphan consolidations in the other hierarchies\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Hierarchy.Unwind.Consolidation';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\ncHierAttr = 'Bedrock.Descendant';\r\ncAttrVal = 'Descendant';\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension : ' | pDimension );\r\n  AsciiOutput( sDebugFile, '            pConsol    : ' | pConsol );\r\n  AsciiOutput( sDebugFile, '            pRecursive : ' | NumberToString( pRecursive ) );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate consol\r\nIf( Trim( pConsol ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No consol specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimIx( pDimension, pConsol ) = 0 % DType( pDimension, pConsol ) @<> 'C' % ElCompN( pDimension, pConsol ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid consolidation: ' | pConsol | '. Not a C element or no children.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n### Turn-off Logging in the Attribute cube\r\nsAttrCube = '}ElementAttributes_' | pDimension ;\r\nIF(\r\nCubeExists( sAttrCube ) = 1 );\r\n  sOLogging = CELLGETS( '}CubeProperties', sAttrCube, 'Logging' );\r\n  CELLPUTS( 'No', '}CubeProperties', sAttrCube, 'Logging' );\r\n\r\nENDIF;\r\n\r\n\r\n### Set Descendent attribute value\r\nAttrDelete( pDimension, cHierAttr );\r\nAttrInsert( pDimension, '', cHierAttr, 'S' );\r\n\r\nnElementIndex = 1;\r\nnElementCount = DimSiz( pDimension );\r\nWhile( nElementIndex <= nElementCount );\r\n  sElement = DimNm( pDimension, nElementIndex );\r\n  If( ElIsAnc( pDimension, pConsol, sElement ) = 1 );\r\n    AttrPutS( cAttrVal, pDimension, sElement, cHierAttr );\r\n  EndIf;\r\n  nElementIndex = nElementIndex + 1;\r\nEnd;\r\n\r\n\r\n### Remove direct children from the target consol ###\r\n\r\nnChildren = ElCompN( pDimension, pConsol );\r\n\r\nWhile( nChildren > 0 );\r\n  # Unwind direct children of target hierarchy only\r\n  sChild = ElComp( pDimension, pConsol, nChildren );\r\n  If( pDebug <= 1 );\r\n    DimensionElementComponentDelete( pDimension, pConsol, sChild );\r\n  EndIf;\r\n  nChildren = nChildren - 1;\r\nEnd;\r\n\r\n\r\n### Assign data source ###\r\n\r\nIf( pRecursive = 1 & pDebug <= 1 );\r\n  # Assign Data Source\r\n  DataSourceType = 'SUBSET';\r\n  DatasourceNameForServer = pDimension;\r\n  DatasourceNameForClient = pDimension;\r\n  DatasourceDimensionSubset = 'ALL';\r\nElse;\r\n  # No data source, straight to Epilog\r\n  DataSourceType = 'NULL';\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Check for errors in prolog ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessBreak;\r\nEndIf;\r\n\r\n\r\n### Break all parent/child links below target consol ###\r\n\r\nIf( ElLev( pDimension, vElement ) = 0 );\r\n  ItemSkip;\r\nEndIf;\r\n\r\nIf( \r\nAttrS( pDimension, vElement, cHierAttr ) @= cAttrVal & \r\nDType( pDimension, vElement ) @= 'C' & \r\nElCompN( pDimension, vElement ) > 0 );\r\n  nChildren = ElCompN( pDimension, vElement );\r\n\r\n  While( nChildren > 0 );\r\n    sChild = ElComp( pDimension, vElement, nChildren );\r\n    If( pDebug <= 1 );\r\n      DimensionElementComponentDelete( pDimension, vElement, sChild );\r\n    EndIf;\r\n    nChildren = nChildren - 1;\r\n  End;\r\n\r\nEndIf;\r\n\r\n\r\n### End Metadata ###", "DataSource": {"dataSourceNameForServer": "}Cubes", "dataSourceNameForClient": "}Cubes", "Type": "TM1DimensionSubset", "subset": "All"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Reset Logging in the Attribute cube\r\nCELLPUTS( sOLogging, '}CubeProperties', sAttrCube, 'Logging' );\r\n\r\n### Remove Descendent attribute\r\n\r\nIf( nErrors = 0 & pDebug <= 1 );\r\n  AttrDelete( pDimension, cHierAttr );\r\nEndIf;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": ["VarType=32\fColType=827\f"]}