{"Parameters": [{"Prompt": "Source Directory to Backup", "Type": "String", "Value": "", "Name": "pDataDir"}, {"Prompt": "Destination Directory for Backup", "Type": "String", "Value": "", "Name": "pBackupDir"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Server.DataDir.Backup", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will back up the Data Directory\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Server.DataDir.Backup';\r\ncUser = TM1User();\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n  AsciiOutput( sDebugFile, 'TM1 User:        ' | cUser );\r\n  AsciiOutput( sDebugFile, '' );\r\n  # Output parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDataDir:    ' | pDataDir );\r\n  AsciiOutput( sDebugFile, '            pBackupDir:  ' | pBackupDir );\r\n  AsciiOutput( sDebugFile, '' );\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Remove leading and/or trailing spaces\r\npDataDir = Trim( pDataDir );\r\npBackupDir = Trim( pBackupDir );\r\n\r\n# Remove trailing \\ from directory names if present\r\nIf( SubSt( pDataDir, Long( pDataDir ), 1 ) @= '\\' );\r\n   pDataDir = SubSt( pDataDir, 1, Long( pDataDir ) - 1 );\r\nEndIf;\r\nIf( SubSt( pBackupDir, Long( pBackupDir ),1 ) @= '\\' );\r\n   pBackupDir = SubSt( pBackupDir, 1, Long( pBackupDir ) - 1 );\r\nEndIf;\r\n\r\n# Check that data directory has been specified\r\nIf( pDataDir @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No data directory specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n# Check that data directory exists\r\nIf( FileExists( pDataDir ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Source directory for backup does not exist: ' | pDataDir;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n# Check that target directory has been specified\r\nIf( pBackupDir @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No backup directory specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n# Check that target directory exists\r\nIf( FileExists( pBackupDir ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Destination directory for backup does not exist: ' | pBackupDir;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n### Save the model to disk\r\nIf( pDebug <= 1 );\r\n  ExecuteProcess( 'Bedrock.Server.SaveDataAll',\r\n    'pDebug', pDebug );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'TM1 Save Data All Complete.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\nEndIf;\r\n\r\n\r\n\r\n### Create batch files\r\nDatasourceASCIIQuoteCharacter='';\r\n\r\n### Create Make Directory Batch File\r\nsBackupDir = pBackupDir | '\\TM1Backup_' | cTimeStamp;\r\nsFileName = 'Bedrock.MkDir.bat' ;\r\nASCIIOUTPUT( sFileName, 'md \"' | sBackupDir |'\"' );\r\n\r\n### Create Exclude File ###\r\nsFileName = 'Excludes.txt';\r\nASCIIOUTPUT( sFileName, '.log');\r\nASCIIOUTPUT( sFileName, '.cfg');\r\nASCIIOUTPUT( sFileName, '.csv');\r\nASCIIOUTPUT( sFileName, '.cmal');\r\nASCIIOUTPUT( sFileName, '.txt');\r\nASCIIOUTPUT( sFileName, '.feeders');\r\n\r\n### Create Batch File ###\r\nsFileName = 'Bedrock.Server.DataDir.Backup.bat';\r\n\r\nsText = 'XCOPY \"'| pDataDir |'\" \"'| sBackupDir|'\" /i /c /s /e /y /exclude:Excludes.txt';\r\nASCIIOUTPUT( sFileName, '@ECHO OFF');\r\nASCIIOUTPUT( sFileName, sText );\r\n\r\nIf( pDebug >= 1 );\r\n  sMessage = 'Command Line: ' | sText;\r\n  AsciiOutput( sDebugFile, sMessage );\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n  ## Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\nEndIf;\r\n\r\n### Create Backup Subfolder ###\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Full Backup Directory: ' | sBackupDir | '\\' );\r\nEndIf;\r\n\r\nIf( pDebug <= 1 );\r\n  ExecuteCommand ( 'Bedrock.MkDir.bat ', 1 );\r\n  If( FileExists( sBackupDir ) = 0 );\r\n    nErrors = 1;\r\n    If( pDebug >= 1 );\r\n      sMessage = 'Process Quit: Could not create backup directory: ' | sBackupDir;\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    EndIf;\r\n    ProcessQuit;\r\n  ELSE;\r\n    If( pDebug >= 1 );\r\n      sMessage = 'Backup directory exists: ' | sBackupDir;\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    EndIf;\r\n  EndIf;\r\nEndIf;\r\n\r\n\r\n### Copy Data Dir to Backup ###\r\n\r\nsCommand = 'Bedrock.Server.DataDir.Backup.bat';\r\n\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Backup Command: ' | sCommand );\r\nEndIf;\r\n\r\nIf( pDebug <= 1 );\r\n  ExecuteCommand ( sCommand, 1 );\r\nEndIf;\r\n\r\n### Delete batch file ###\r\nIf( pDebug <= 1 );\r\n  sFileName = 'Bedrock.Server.DataDir.Backup.bat' ;\r\n  ASCIIDelete( sFileName );\r\n  sFileName = 'Bedrock.MkDir.bat';\r\n  ASCIIDelete( sFileName );\r\n  sFileName = 'Excludes.txt';\r\n  ASCIIDelete( sFileName );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Temporary files deleted.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\nEndIf;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}