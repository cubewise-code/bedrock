{"Parameters": [{"Prompt": "Source Dimension", "Type": "String", "Value": "", "Name": "pSourceDim"}, {"Prompt": "Source Subset", "Type": "String", "Value": "", "Name": "pSubset"}, {"Prompt": "Target Dimension", "Type": "String", "Value": "", "Name": "pTargetDim"}, {"Prompt": "Include Attributes? (Boolean 1=True)", "Type": "Numeric", "Value": 0, "Name": "pAttr"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n######################################\r\n##~~  Copyright Cubewise P/L 2010 ~~##\r\n######################################\r\n\r\n\r\n### Check for errors in prolog ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessBreak;\r\nEndIf;\r\n\r\n\r\n### Replicate Attributes ###\r\n\r\n# Note: DTYPE on Attr dim returns \"AS\", \"AN\" or \"AA\" need to strip off leading \"A\"\r\n\r\nIf( pDebug <= 1 );\r\n\r\n  If( pAttr = 1 & DimensionExists( sAttrDim ) = 1 );\r\n\r\n    nCount = 1;\r\n    While( nCount <= nNumAttrs );\r\n      sAttrName = DimNm( sAttrDim, nCount );\r\n      sAttrType = SubSt( DTYPE( sAttrDim, sAttrName ), 2, 1 );\r\n      If( sAttrType @= 'S' % sAttrType @= 'A' );\r\n        sAttrVal = AttrS( pSourceDim, vElement, sAttrName );\r\n        If( sAttrVal @<> '' );\r\n          AttrPutS( sAttrVal, pTargetDim, vElement, sAttrName );\r\n        EndIf;\r\n      Else;\r\n        nAttrVal = AttrN( pSourceDim, vElement, sAttrName );\r\n        If( nAttrVal <> 0 );\r\n          AttrPutN( nAttrVal, pTargetDim, vElement, sAttrName );\r\n        EndIf;\r\n      EndIf;\r\n      nCount = nCount + 1;\r\n    End;\r\n\r\n  EndIf;\r\n\r\nEndIf;\r\n\r\n\r\n### End Data ###", "Variables": [{"Position": 1, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "vElement"}], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.CloneFromSubset.Flat", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n################################################################\r\n\r\n# This process will clone the source dimension\r\n# If the target dimension already exists then it will be overwritten\r\n\r\n\r\n### Constants ###\r\ncProcess = 'Bedrock.Dim.CloneFromSubset.Flat' ;\r\ncUser = TM1User();\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.';\r\ncUser = TM1User;\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncSubset =  '}Bedrock_' | sRandomInt;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n  AsciiOutput( sDebugFile, 'TM1 User:        ' | cUser );\r\n  AsciiOutput( sDebugFile, '' );\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pSourceDim : ' | pSourceDim );\r\n  AsciiOutput( sDebugFile, '            pSourceSub : ' | pSubset );\r\n  AsciiOutput( sDebugFile, '            pTargetDim : ' | pTargetDim );\r\n  AsciiOutput( sDebugFile, '            pAttr      : ' | NumberToString( pAttr ) );\r\n  AsciiOutput( sDebugFile, '' );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Validate source dimension\r\nIF(\r\nDimensionExists( pSourceDim ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid source dimension: ' | pSourceDim;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n## Validate Source Subset\r\nIF(\r\npSubset @= '' );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Using the All subset as the data source.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  If(\r\n  SubsetExists( pSourceDim , cSubset ) = 1 );\r\n    SubsetDeleteAllElements( pSourceDim , cSubset );\r\n  Else;\r\n    SubsetCreate( pSourceDim , cSubset );\r\n  EndIf;\r\n  SubsetIsAllSet( pSourceDim , cSubset, 1 );\r\n  sSubset = cSubset;\r\n\r\nElseIf(\r\nSubsetExists( pSourceDim, pSubset) = 0 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Invalid source subset: ' | pSubset;\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\n\r\nELSE;\r\n  sSubset = pSubset;\r\n  nSubsetSize = SubsetGetSize( pSourceDim, pSubset );\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, '            Subset Siz      : ' | NumberToString( nSubsetSize ) );\r\n  EndIf;\r\n\r\nENDIF;\r\n\r\n\r\n# Validate target dimension\r\nIf( pTargetDim @= '' % pTargetDim @= pSourceDim );\r\n  pTargetDim = pSourceDim | '_Clone';\r\nEndIf;\r\n\r\n\r\n### Create target dimension ###\r\nIF(\r\npDebug <= 1 );\r\n  If( DimensionExists( pTargetDim ) = 0 );\r\n    DimensionCreate( pTargetDim );\r\n  Else;\r\n    ExecuteProcess( 'Bedrock.Dim.Hierarchy.Unwind.All',\r\n      'pDimension', pTargetDim,\r\n      'pDebug', pDebug );\r\n  EndIf;\r\n#  DimensionSortOrder(pTargetDim, 'ByName', 'Ascending', 'ByHierarchy' , 'Ascending');\r\nENDIF;\r\n\r\n\r\n### Assign Data Source ###\r\nDatasourceNameForServer = pSourceDim;\r\nDatasourceNameForClient = pSourceDim;\r\nDataSourceType = 'SUBSET';\r\nDatasourceDimensionSubset = sSubset;\r\n\r\n\r\n### Replicate Attributes ###\r\n\r\n# Note: DType on Attr dim returns \"AS\", \"AN\" or \"AA\" need to strip off leading \"A\"\r\n\r\nsAttrDim = '}ElementAttributes_' | pSourceDim;\r\nIf( pAttr = 1 & DimensionExists( sAttrDim ) = 1 );\r\n  nNumAttrs = DimSiz( sAttrDim );\r\n  nCount = 1;\r\n  While( nCount <= nNumAttrs );\r\n    sAttrName = DimNm( sAttrDim, nCount );\r\n    sAttrType = SubSt(DType( sAttrDim, sAttrName ), 2, 1 );\r\n    If( sAttrName @<> 'Format' );\r\n      If( pDebug <= 1 );\r\n        AttrInsert( pTargetDim, '', sAttrName, sAttrType );\r\n      EndIf;\r\n    EndIf;\r\n    nCount = nCount + 1;\r\n  End;\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n################################################################\r\n\r\n\r\n### Check for errors in prolog ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessBreak;\r\nEndIf;\r\n\r\n\r\n## Get source element type\r\nsElType = DType( pSourceDim, vElement );\r\n\r\n\r\n\r\n### Add Elements to target cloned dimension ###\r\nIf( pDebug <= 1 );\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Metadata.debug';\r\n\r\n  ## Add the element to the target dimension.\r\n  IF(\r\n  sElType @= 'C' );\r\n    DimensionElementInsert( pTargetDim, '', vElement, 'N' );\r\n  Else;\r\n    DimensionElementInsert( pTargetDim, '', vElement, sElType );\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( pDebug >= 1 );\r\n  ASCIIOUTPUT( sDebugFile, 'Processed: ' | vElement );\r\nEndIf;\r\n\r\n\r\n### End MetaData ##", "DataSource": {"dataSourceNameForServer": "}Cubes", "dataSourceNameForClient": "}Cubes", "Type": "TM1DimensionSubset", "subset": "All"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################\r\n##~~ Copyright Cubewise P/L 2010 ~~##\r\n#####################################\r\n\r\n\r\n### Clean up temporary subsets\r\nIF(\r\nsSubset @= cSubset );\r\n  SubsetDestroy( pSourceDim , cSubset );\r\nEndIf;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": ["VarType=32\fColType=827\f"]}