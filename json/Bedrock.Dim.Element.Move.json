{"Parameters": [{"Prompt": "Dimension Name", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Element Name", "Type": "String", "Value": "", "Name": "pElement"}, {"Prompt": "Target Consolidation", "Type": "String", "Value": "", "Name": "pTargetConsol"}, {"Prompt": "Add or Remove Element from Consolidation", "Type": "String", "Value": "Add", "Name": "pAction"}, {"Prompt": "Element Weight (for Add only)", "Type": "Numeric", "Value": 1, "Name": "pElWeight"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Element.Move", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will Add or Remove Elements from a Consolidation\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Element.Move';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension    : ' | pDimension );\r\n  AsciiOutput( sDebugFile, '            pElement      : ' | pElement );\r\n  AsciiOutput( sDebugFile, '            pTargetConsol : ' | pTargetConsol );\r\n  AsciiOutput( sDebugFile, '            pAction       : ' | pAction );\r\n  AsciiOutput( sDebugFile, '            pElWeight     : ' | NumberToString( pElWeight ) );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Dimension: ' | pDimension | ' does not exist on server.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate Element\r\nIf( Trim( pElement ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No element specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimIx( pDimension, pElement ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Element: ' | pElement | ' does not exist in dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate target consol\r\nIf( DimIx( pDimension, pTargetConsol ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Consolidated Element: ' | pTargetConsol | ' does not exist in dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DType( pDimension, pTargetConsol ) @<> 'C' );\r\n  nErrors = 1;\r\n  sMessage = 'Target Consolidation: ' | pTargetConsol | ' has incorrect element type.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( ElIsAnc( pDimension, pElement, pTargetConsol ) = 1 );\r\n  nErrors = 1;\r\n  sMessage = 'Cannot add element: ' | pElement | ' to consolidation: ' | pTargetConsol | ' due to circular reference.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate action\r\nIf( pAction @<> 'Add' & pAction @<> 'Remove' );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid action: ' | pAction | '. Valid actions are Add or Remove';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n\r\nIf( pDebug <= 1 );\r\n\r\n  ### Insert Element into consolidation ###\r\n\r\n  If( pAction @= 'Add' );\r\n    DimensionElementComponentAdd( pDimension, pTargetConsol, pElement, pElWeight );\r\n  EndIf;\r\n\r\n\r\n  ### Remove Element from consolidation ###\r\n\r\n  If( pAction @= 'Remove' );\r\n\r\n    # Check that element is actually a child of target consol\r\n    If( ElIsComp ( pDimension, pElement, pTargetConsol ) = 1 );\r\n      DimensionElementComponentDelete( pDimension, pTargetConsol, pElement );\r\n    Else;\r\n      nErrors = 1;\r\n      sMessage = 'Element: ' | pElement | ' is not a child of consolidation: ' | pTargetConsol;\r\n      If( pDebug >= 1 );\r\n        AsciiOutput( sDebugFile, sMessage );\r\n      EndIf;\r\n      ItemReject( sMessage );\r\n    EndIf;\r\n\r\n  EndIf;\r\n\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}