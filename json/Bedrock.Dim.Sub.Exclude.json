{"Parameters": [{"Prompt": "Dimension", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Subset", "Type": "String", "Value": "", "Name": "pSubset"}, {"Prompt": "Elements to be Excluded (Seperated by Delimiter)", "Type": "String", "Value": "", "Name": "pElements"}, {"Prompt": "Delimiter", "Type": "String", "Value": "&", "Name": "pDelimiter"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Sub.Exclude", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will remove specified elements from a subset\r\n# If a leaf level element is specified it will be removed\r\n# If a consolidated element is specified it will be removed as well as its descendants\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Sub.Exclude';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension   : ' | pDimension );\r\n  AsciiOutput( sDebugFile, '            pSubset      : ' | pSubset );\r\n  AsciiOutput( sDebugFile, '            pElements  : ' | pElements );\r\n  AsciiOutput( sDebugFile, '            pDelimiter   : ' | pDelimiter );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate subset\r\nIf( Trim( pSubset ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No subset specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( SubsetExists( pDimension, pSubset ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid subset: ' | pSubset | ' in dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate Elements\r\nIf( Trim( pElements ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No Elements specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate delimiter\r\nIf( pElements @<> '' & pDelimiter @= '' );\r\n  pDelimiter = '&';\r\nEndIf;\r\n\r\n\r\n### Process Elements ###\r\n\r\nIf( pDebug <= 1 );\r\n\r\n  nDelimIndex = 1;\r\n  sExclusions = pElements;\r\n\r\n  While( nDelimIndex <> 0 & Long( sExclusions ) > 0 );\r\n\r\n    nDelimIndex = Scan( pDelimiter, sExclusions );\r\n    If( nDelimIndex <> 0 );\r\n      sExclusion = Trim( SubSt( sExclusions, 1, nDelimIndex - 1 ) );\r\n      sExclusions = Trim( SubSt( sExclusions, nDelimIndex + Long( pDelimiter ), Long( sExclusions ) ) );\r\n    Else;\r\n      sExclusion = Trim( sExclusions );\r\n    EndIf;\r\n\r\n    # Check that Element is present in the dimension\r\n    If( DimIx( pDimension, sExclusion ) <> 0 );\r\n      sExclusion = DimensionElementPrincipalName( pDimension, sExclusion );\r\n      # Work through subset and remove Element\r\n      nSubsetIndex = 1;\r\n      nSubsetSize = SubsetGetSize( pDimension, pSubset );\r\n      While( nSubsetIndex <= nSubsetSize );\r\n        sElement = SubsetGetElementName( pDimension, pSubset, nSubsetIndex );\r\n        # If Element is found or a descendant of the Element is found the remove from subset\r\n        If( pDebug <= 1 & sElement @= sExclusion % ElIsAnc( pDimension, sExclusion, sElement ) = 1 );\r\n          SubsetElementDelete( pDimension, pSubset, nSubsetIndex );\r\n          nSubsetSize = nSubsetSize - 1;\r\n        Else;\r\n          nSubsetIndex = nSubsetIndex + 1;\r\n        EndIf;\r\n      End;\r\n    Else;\r\n      If( pDebug >= 1 );\r\n        AsciiOutput( sDebugFile, 'Element: ' | sExclusion | ' does not exist in dimension: ' | pDimension );\r\n      EndIf;\r\n    EndIf;\r\n\r\n  End;\r\n\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}