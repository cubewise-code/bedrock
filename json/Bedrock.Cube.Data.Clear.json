{"Parameters": [{"Prompt": "Cube Name", "Type": "String", "Value": "", "Name": "pCube"}, {"Prompt": "Temp view name", "Type": "String", "Value": "", "Name": "pView"}, {"Prompt": "Filter: Year: 2006 + 2007 & Scenario: Actual + Budget & Organization: North America Operations", "Type": "String", "Value": "", "Name": "pFilter"}, {"Prompt": "Delimiter for start of Dimension/Element set", "Type": "String", "Value": "&", "Name": "pDimensionDelim"}, {"Prompt": "Delimiter for start of element list", "Type": "String", "Value": ":", "Name": "pElementStartDelim"}, {"Prompt": "Delimiter between elements", "Type": "String", "Value": "+", "Name": "pElementDelim"}, {"Prompt": "Delete temporary view and Subset ( 0 = Retain View and Subsets 1 = Delete View and Subsets 2 = Delete View only )", "Type": "Numeric", "Value": 1, "Name": "pDestroyTempObj"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Cube.Data.Clear", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process creates a view and zeros it out.\r\n# It can handle specific element references for any number of dimensions and elements.\r\n\r\n# Note:\r\n# - The pFilter parameter contains the dimenson and elements to be used for filtering.\r\n# - The dimension parameters do not need to be given in the index order of dimensions in the cube.\r\n# - The dimension name is specified as the first member of the delimited string of elements.\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Cube.Data.Clear';\r\ncUser = TM1User();\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\ncDefaultView = 'Bedrock_' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n  AsciiOutput( sDebugFile, 'TM1 User:        ' | cUser );\r\n  AsciiOutput( sDebugFile, '' );\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pCube:              ' | pCube );\r\n  AsciiOutput( sDebugFile, '            pView:              ' | pView );\r\n  AsciiOutput( sDebugFile, '            pFilter:            ' | pFilter );\r\n  AsciiOutput( sDebugFile, '            pDimensionDelim:    ' | pDimensionDelim );\r\n  AsciiOutput( sDebugFile, '            pElementStartDelim: ' | pElementStartDelim );\r\n  AsciiOutput( sDebugFile, '            pElementDelim:      ' | pElementDelim );\r\n  AsciiOutput( sDebugFile, '            pDestroyTempObj:     ' | NumberToString( pDestroyTempObj) );\r\n  AsciiOutput( sDebugFile, '' );\r\n\r\n  AsciiOutput( sDebugFile, 'Default Temporary View Name : ' | cDefaultView );\r\n  AsciiOutput( sDebugFile, '' );\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# If blank delimiter specified then convert to default\r\nIf( Trim( pDimensionDelim ) @= '' );\r\n  pDimensionDelim = '&';\r\nEndIf;\r\n\r\nIf( Trim( pElementStartDelim ) @= '' );\r\n  pElementStartDelim = ':';\r\nEndIf;\r\n\r\nIf( Trim( pElementDelim ) @= '' );\r\n  pElementDelim = '+';\r\nEndIf;\r\n\r\n# If no cube has been specified then terminate process\r\nIf( Trim( pCube ) @= '' );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'No cube specified';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n# If specified cube does not exist then terminate process\r\nIf( CubeExists( pCube ) = 0 );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Cube: ' | pCube | ' does not exist';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n## Validate the View parameter\r\nIf( TRIM(pView) @= '' );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Using default view: ' | cDefaultView;\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  cView = cDefaultView ;\r\nElse ;\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Using view: ' | pView;\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  cView = pView ;\r\nEndIf;\r\n\r\n## Validate that a Filter has been provided.\r\nIf( Trim( pFilter) @= '' );\r\n  If( pDebug >= 1 );\r\n    sMessage = 'Filter has not been specified. User \"Clear Cube\" as the filter to zero out the entire cube. ';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nELSEIF(\r\nTrim( pFilter ) @= 'Clear Cube' );\r\n  pFilter = '';\r\nEndIf;\r\n\r\n### Create View ###\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Create view.' );\r\nEndIf;\r\nIf( pDebug <= 1 );\r\n  vRes = ExecuteProcess('Bedrock.Cube.View.Create',\r\n    'pCube', pCube,\r\n    'pView', cView,\r\n    'pFilter', pFilter,\r\n    'pSuppressZero', 1,\r\n    'pSuppressConsol',1,\r\n    'pSuppressRules',1,\r\n    'pDimensionDelim', pDimensionDelim,\r\n    'pElementStartDelim', pElementStartDelim,\r\n    'pElementDelim', pElementDelim,\r\n    'pDebug', pDebug );\r\n\r\nEndIf;\r\n\r\n### Zero Out View ###\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'View and Subsets created' );\r\nEndIf;\r\nIf( pDebug <= 1 );\r\n  IF (vRes = ProcessExitNormal());\r\n      ViewZeroOut( pCube, cView );\r\n  ELSE;\r\n    AsciiOutput( sDebugFile, 'Process Bedrock.Cube.View.Create Failed, nothing will be ZeroOut' );\r\n  ENDIF;\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\nEndIf;\r\n\r\n### Destroy temporary views and susbsets ###\r\nIf( pDebug <= 1 );\r\n  ExecuteProcess('Bedrock.Cube.ViewAndSubsets.Delete',\r\n    'pCube', pCube,\r\n    'pView', cView,\r\n    'pSubset', cView,\r\n    'pMode', pDestroyTempObj,\r\n    'pDebug', pDebug);\r\n\r\nENDIF;\r\n\r\nIf( pDebug >= 1 );\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}