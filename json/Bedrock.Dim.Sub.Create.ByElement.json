{"Parameters": [{"Prompt": "Dimension", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Subset", "Type": "String", "Value": "", "Name": "pSubset"}, {"Prompt": "Elements Separated by Delimiter", "Type": "String", "Value": "", "Name": "pElements"}, {"Prompt": "Delimiter", "Type": "String", "Value": "", "Name": "pDelimiter"}, {"Prompt": "Add to an existing Subset (Boolean: 1=True)", "Type": "Numeric", "Value": 0, "Name": "pAddToSubset"}, {"Prompt": "Assign an alias to the subset", "Type": "String", "Value": "", "Name": "pAlias"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Sub.Create.ByElement", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will create a static subset based on a list of supplied elements\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Sub.Create.ByElement';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n## Set debug file name\r\n sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  ## Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  ## Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension   : ' | pDimension );\r\n  AsciiOutput( sDebugFile, '            pSubset      : ' | pSubset );\r\n  AsciiOutput( sDebugFile, '            pElements    : ' | pElements );\r\n  AsciiOutput( sDebugFile, '            pDelimiter   : ' | pDelimiter );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate subset\r\nIf( Trim( pSubset ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No subset specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate elements\r\nIf( Trim( pElements ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No elements specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Validate delimiter\r\nIf( pDelimiter @= '' );\r\n  pDelimiter = '&';\r\nEndIf;\r\n\r\n# Validate add to subset\r\nIf( pAddToSubset <> 0 & pAddToSubset <> 1 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid value for pAddToSubset: ' | NumberToString( pAddToSubset ) | '. Valid values are 0 and 1';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n## Validate Alias\r\nsDimAttr = '}ElementAttributes_' | pDimension;\r\nIF(\r\npAlias @<> '' );\r\n  IF(\r\n  DimensionExists( sDimAttr ) = 0 );\r\n    sMessage = 'No attributes exist for the dimension: ' | pDimension;\r\n    If( pDebug >= 1 );\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    EndIf;\r\n    pAlias = '';\r\n  EndIf;\r\n\r\n  IF(\r\n  DIMIX( sDimAttr, pAlias ) = 0 );\r\n    sMessage = 'The Alias: ' | pAlias | ' does not exist in the dimension: ' | pDimension;\r\n    If( pDebug >= 1 );\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    EndIf;\r\n    pAlias = '';\r\n  EndIf;\r\n\r\n  IF(\r\n  DTYPE( sDimAttr, pAlias ) @<> 'AA' );\r\n    sMessage = 'The Alias: ' | pAlias | ' is not an Alias in the dimension: ' | sDimAttr;\r\n    If( pDebug >= 1 );\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    EndIf;\r\n    pAlias = '';\r\n  EndIf;\r\nENDIF;\r\n\r\n\r\n### Prepare subset ###\r\n\r\nIf( SubsetExists( pDimension, pSubset ) = 1 );\r\n  If( pAddtoSubset <> 1 );\r\n    If( pDebug <= 1 );\r\n      SubsetDeleteAllElements( pDimension, pSubset );\r\n    EndIf;\r\n    nSubsetSize = 0;\r\n  Else;\r\n    nSubsetSize = SubsetGetSize( pDimension, pSubset );\r\n  EndIf;\r\nElse;\r\n  If( pDebug <= 1 );\r\n    SubsetCreate( pDimension, pSubset );\r\n  EndIf;\r\n  nSubsetSize = 0;\r\nEndIf;\r\n\r\n### Assign Alias to subset\r\nIF(\r\npAlias @<> '' );\r\n  If( pDebug <= 1 );\r\n    SubsetAliasSet( pDimension, pSubset, pAlias );\r\n  EndIf;\r\n\r\n  If( pDebug >= 1 );\r\n    sMessage = 'The Alias: ' | pAlias | ' has been set.';\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\nENDIF;\r\n\r\n### Insert elements ###\r\n\r\nnSubsetIndex = 1;\r\nsElements = pElements;\r\nnDelimIndex = 1;\r\n\r\n# Split filter into seperate dimensions\r\nWhile( nDelimIndex <> 0 & Long( sElements ) > 0 );\r\n\r\n  nDelimIndex = Scan( pDelimiter, sElements );\r\n  If( nDelimIndex <> 0 );\r\n    sElement = Trim( SubSt( sElements, 1, nDelimIndex - 1 ) );\r\n    sElements = Trim( SubSt( sElements, nDelimIndex + Long( pDelimiter ), Long( sElements ) ) );\r\n  Else;\r\n    sElement = Trim( sElements );\r\n  EndIf;\r\n\r\n  If( DimIx( pDimension, sElement ) <> 0 );\r\n    If( pDebug <= 1 );\r\n       IF(\r\n       ELLEV( pDimension, sElement) > 0);\r\n         ExecuteProcess('Bedrock.Dim.Sub.Create',\r\n           'pDimension', pDimension,\r\n           'pSubset', pSubset,\r\n           'pConsol', sElement,\r\n           'pExclusions', '',\r\n           'pDelimiter', pDelimiter,\r\n           'pAddToSubset', 1,\r\n           'pAlias', '',\r\n           'pDebug', pDebug\r\n          );\r\n\r\n          If( pDebug >= 1 );\r\n            AsciiOutput( sDebugFile, 'Consolidation: ' | sElement | ' has been added to the subset.' );\r\n          EndIf;\r\n      ELSE;\r\n        SubsetElementInsert( pDimension, pSubset, sElement, nSubsetIndex );\r\n        If( pDebug >= 1 );\r\n          AsciiOutput( sDebugFile, 'Element: ' | sElement | ' has been added to the subset.' );\r\n        EndIf;\r\n      ENDIF;\r\n    EndIf;\r\n    nSubsetIndex = nSubsetIndex + 1;\r\n  Else;\r\n    If( pDebug >= 1 );\r\n      AsciiOutput( sDebugFile, 'Element: ' | sElement | ' does not exist in dimension: ' | pDimension | ', skipping' );\r\n    EndIf;\r\n  EndIf;\r\nEnd;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}