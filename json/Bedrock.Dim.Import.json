{"Parameters": [{"Prompt": "Source Directory", "Type": "String", "Value": "", "Name": "pSourceDir"}, {"Prompt": "Source File", "Type": "String", "Value": "", "Name": "pSourceFile"}, {"Prompt": "Dimension", "Type": "String", "Value": "", "Name": "pDimension"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n### Initialise Debug ###\r\nIf( pDebug >= 1 );\r\n  ## Set debug file name\r\n  sDebugFile = cDebugFile | 'Data.debug';\r\nEndIf;\r\n\r\n\r\n### Data Count\r\nnDataCount = nDataCount + 1;\r\n\r\n### Load Data ###\r\n\r\nIF(\r\nnDataCount = 3);\r\n  ## Set Dimension Sort \r\n  If( pDebug <= 1 );\r\n    CELLPUTS( V1, cCubeS1 , pDimension, 'SORTELEMENTSTYPE' );\r\n    CELLPUTS( V2, cCubeS1 , pDimension, 'SORTCOMPONENTSTYPE' );\r\n    CELLPUTS( V3, cCubeS1 , pDimension, 'SORTELEMENTSSENSE' );\r\n    CELLPUTS( V4, cCubeS1 , pDimension, 'SORTCOMPONENTSSENSE' );\r\n  EndIf;\r\n  If( pDebug >= 1 );\r\n    ASCIIOUTPUT( sDebugFile, 'Sort Order set.', V1, V2, V3, V4 );\r\n  EndIf;\r\nENDIF;\r\n\r\n\r\nIF(\r\nV1 @= 'A' );\r\n  If( pDebug <= 1 );\r\n    ATTRINSERT( pDimension, '', V2, SUBST( V3, 2, 1 ) );\r\n  EndIf;\r\n  If( pDebug >= 1 );\r\n    ASCIIOUTPUT( sDebugFile, 'Create Attribute.', V2 );    \r\n  EndIf;\r\n\r\nELSEIF(\r\nV1 @= 'V' );\r\n  If( pDebug <= 1 );\r\n    IF(\r\n    DTYPE( sAttrDimName, V3 ) @= 'AN' );\r\n      ATTRPUTN( StringToNumber( V4 ), pDimension, V2, V3 );\r\n    ELSE;\r\n      ATTRPUTS( V4, pDimension, V2, V3 );\r\n    ENDIF;\r\n  EndIf;\r\n  If( pDebug >= 1 );\r\n    ASCIIOUTPUT( sDebugFile, 'Load Attribute.', V2, V3, V4);    \r\n  EndIf;\r\nENDIF;", "Variables": [{"Position": 1, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "V1"}, {"Position": 2, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "V2"}, {"Position": 3, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "V3"}, {"Position": 4, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "V4"}, {"Position": 5, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "V5"}, {"Position": 6, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "V6"}], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Import", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process will Create Dimensions from File.\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.ImportFromFile';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp;\r\n\r\nnMetaCount = 0;\r\nnDataCount = 0;\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pSourceDir  : ' | pSourceDir );\r\n  AsciiOutput( sDebugFile, '            pSourceFile : ' | pSourceFile );\r\n  AsciiOutput( sDebugFile, '            pDimension  : ' | pDimension );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n## Validate source dir\r\nIf( FileExists( pSourceDir ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid source directory specified: folder does not exist.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n\r\nnSourceFileLen = LONG( pSourceFile);\r\nIF(\r\nnSourceFileLen <= 3 );\r\n  sSourceFile = TRIM( pSourceFile ) | '.csv';\r\nELSEIF(\r\nSUBST( pSourceFile , nSourceFileLen - 3, 1 ) @<> '.' );\r\n  sSourceFile = TRIM( pSourceFile ) | '.csv';\r\nELSE;\r\n  sSourceFile = pSourceFile;\r\nENDIF;\r\n\r\nIf( SubSt( pSourceDir, Long( pSourceDir ) - 1, 1 ) @<> '\\' );\r\n  pSourceDir = pSourceDir | '\\';\r\nEndIf;\r\nsFilename = pSourceDir | sSourceFile;\r\n\r\n## Validate source file\r\nIf( Trim( pSourceFile ) @= '' % FileExists( sFilename ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Invalid source file specified: file does not exist in directory.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n## Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n### Prepare target dimension ###\r\nIf( pDebug <= 1 );\r\n  If( DimensionExists( pDimension ) = 1 );\r\n    ExecuteProcess('Bedrock.Dim.Hierarchy.Unwind.All',\r\n      'pDimension', pDimension,\r\n      'pDebug', pDebug );\r\n  Else;\r\n    DimensionCreate( pDimension );\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( pDebug >= 1 );\r\n  If( DimensionExists( pDimension ) = 1 );\r\n    sMessage = 'Dimension unwound: ' | pDimension;\r\n  Else;\r\n    sMessage = 'Dimension created: ' | pDimension;\r\n  EndIf;\r\n  AsciiOutput( sDebugFile, sMessage );\r\nEndIf;\r\n\r\n### CONSTANTS ###\r\nsAttrDimName = '}ElementAttributes_' | pDimension;\r\ncCubeS1 = '}DimensionProperties';\r\n\r\n### Assign Datasource ###\r\n\r\nDataSourceType = 'CHARACTERDELIMITED';\r\nDatasourceNameForServer = sFilename;\r\nDatasourceNameForClient = sFilename;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  ## Set debug file name\r\n  sDebugFile = cDebugFile | 'Metadata.debug';\r\nEndIf;\r\n\r\n### Check for error in prolog ###\r\n\r\nIf( nErrors > 0 );\r\n  ProcessBreak;\r\nEndIf;\r\n\r\n### Metadata Count\r\nnMetaCount = nMetaCount + 1;\r\n\r\n### Validate record\r\nIF(\r\nnMetaCount < 7 );\r\n  ITEMSKIP;\r\nENDIF;\r\n\r\n\r\n### Build dimension\r\n\r\nIF(\r\nV1 @= 'E' );\r\n  If( pDebug <= 1 );\r\n    DimensionElementInsert( pDimension, '', V2, V3 );\r\n  EndIf;\r\n  If( pDebug >= 1 );\r\n    ASCIIOUTPUT( sDebugFile, 'Element Added', V2, V3 );\r\n  EndIf;\r\n\r\nELSEIF(\r\nV1 @= 'P' );\r\n  If( pDebug <= 1 );\r\n    DimensionElementInsert( pDimension, '', V3, V4 );\r\n    DimensionElementComponentAdd( pDimension, V3, V2, StringToNumber( V5 ) );\r\n  EndIf;\r\n  If( pDebug >= 1 );\r\n    ASCIIOUTPUT( sDebugFile, 'Parent added Added', V2, V3, V5 );\r\n  EndIf;\r\n\r\nENDIF;\r\n", "DataSource": {"asciiQuoteCharacter": "\"", "asciiDelimiterChar": ",", "dataSourceNameForServer": "C:\\Users\\adavis\\Documents\\Bedrock 3.0\\Export\\Column_Export.csv", "dataSourceNameForClient": "C:\\Users\\adavis\\Documents\\Bedrock 3.0\\Export\\Column_Export.csv", "asciiHeaderRecords": 0, "asciiThousandSeparator": ",", "asciiDelimiterType": "Character", "Type": "ASCII", "asciiDecimalSeparator": "."}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n\r\n\r\n\r\n\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": ["VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f"]}