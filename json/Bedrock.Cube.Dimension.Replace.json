{"Parameters": [{"Prompt": "Cube", "Type": "String", "Value": "", "Name": "pCube"}, {"Prompt": "Dimension to be replaced", "Type": "String", "Value": "", "Name": "pSourceDim"}, {"Prompt": "Replacement Dimension", "Type": "String", "Value": "", "Name": "pTargetDim"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Cube.Dimension.Replace", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n# This process selects the cube and replaces\r\n# the source dimensions from a specified target dimensions.\r\n# This process should only be run on an EMPTY cube or a cube that\r\n# has already had all data exported to a text file\r\n\r\n# Note:\r\n# - This process does not preserve any cube rules as they would likely no longer be\r\n#   valid if a dimension is replaced\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Cube.Dimension.Replace' ;\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pCube      : ' | pCube );\r\n  AsciiOutput( sDebugFile, '            pSourceDim : ' | pSourceDim );\r\n  AsciiOutput( sDebugFile, '            pTargetDim : ' | pTargetDim );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n# If no cube has been specified then terminate process\r\nIf( Trim( pCube ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No cube specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# If specified cube does not exist then terminate process\r\nIf( CubeExists( pCube ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Cube: ' | pCube | ' does not exist';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Don't allow system cubes to be modified\r\nIf( SubSt( pCube, 1, 1 ) @= '}' );\r\n  nErrors = 1;\r\n  sMessage = 'Do not modify system cubes: ' | pCube;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# If no source dimension has been specified then terminate process\r\nIf( Trim( pSourceDim ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No source dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Check that the source dimension exists\r\nIf( DimensionExists( pSourceDim ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Source dimension: ' | pSourceDim | ' does not exist';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# If no target dimension has been specified then terminate process\r\nIf( Trim( pTargetDim ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No target dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Check that the target dimension exists\r\nIf( DimensionExists( pTargetDim ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Target dimension: ' | pTargetDim | ' does not exist';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Check that the source and target dimensions are different\r\nIf( pSourceDim @= pTargetDim );\r\n  nErrors = 1;\r\n  sMessage = 'Source and target dimensions are the same';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n### Count the dimensions and confirm that source dimension exists in cube and that the target dimension doesn't ###\r\n\r\nnSourceDimExists = 0;\r\nnTargetDimExists = 0;\r\n\r\nnDimensionCount = 0;\r\nsDimension = TabDim( pCube, nDimensionCount + 1);\r\n\r\nWhile( sDimension @<> '' );\r\n  nDimensionCount = nDimensionCount + 1;\r\n  If( sDimension @= pSourceDim );\r\n    nSourceDimExists = 1;\r\n  EndIf;\r\n  If( sDimension @= pTargetDim );\r\n    nTargetDimExists = 1;\r\n  EndIf;\r\n  sDimension = TabDim( pCube, nDimensionCount + 1);\r\nEnd;\r\n\r\n\r\n### Validate Dimensions ###\r\n\r\n# Check that source dimension exists in cube\r\nIf( nSourceDimExists = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'The source dimension: ' | pSourceDim | ' does not exist in the cube: ' | pCube;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Check that target dimension doesn't already exist in cube\r\nIf( nTargetDimExists = 1 );\r\n  nErrors = 1;\r\n  sMessage = 'The target dimension: ' | pTargetDim | ' already exists in the cube: ' | pCube;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# Check if cube exceeds current max dimenions\r\nIf( nDimensionCount > 27 );\r\n  nErrors = 1;\r\n  sMessage = 'Process needs to be modified to handle cubes with more than 27 dimensions';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n# All paramaeters should be OK if this point has been reached\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'All parameters OK' );\r\nEndIf;\r\n\r\n\r\n### Work out dimensions and substitute source and target dimensions ###\r\n\r\nsDim1 = TabDim( pCube, 1 );\r\nIf( sDim1 @= pSourceDim );\r\n  sDim1 = pTargetDim;\r\nEndIf;\r\n\r\nsDim2 = TabDim( pCube, 2 );\r\nIf( sDim2 @= pSourceDim );\r\n  sDim2 = pTargetDim;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 3 );\r\n  sDim3 = TabDim( pCube, 3 );\r\n  If( sDim3 @= pSourceDim );\r\n    sDim3 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 4 );\r\n  sDim4 = TabDim( pCube, 4 );\r\n  If( sDim4 @= pSourceDim );\r\n    sDim4 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 5 );\r\n  sDim5 = TabDim( pCube, 5 );\r\n  If( sDim5 @= pSourceDim );\r\n    sDim5 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 6 );\r\n  sDim6 = TabDim( pCube, 6 );\r\n  If( sDim6 @= pSourceDim );\r\n    sDim6 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 7 );\r\n  sDim7 = TabDim( pCube, 7 );\r\n  If( sDim7 @= pSourceDim );\r\n    sDim7 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 8 );\r\n  sDim8 = TabDim( pCube, 8 );\r\n  If( sDim8 @= pSourceDim );\r\n    sDim8 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 9 );\r\n  sDim9 = TabDim( pCube, 9 );\r\n  If( sDim9 @= pSourceDim );\r\n    sDim9 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 10 );\r\n  sDim10 = TabDim( pCube, 10 );\r\n  If( sDim10 @= pSourceDim );\r\n    sDim10 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 11 );\r\n  sDim11 = TabDim( pCube, 11 );\r\n  If( sDim11 @= pSourceDim );\r\n    sDim11 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 12 );\r\n  sDim12 = TabDim( pCube, 12 );\r\n  If( sDim12 @= pSourceDim );\r\n    sDim12 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 13 );\r\n  sDim13 = TabDim( pCube, 13 );\r\n  If( sDim13 @= pSourceDim );\r\n    sDim13 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 14 );\r\n  sDim14 = TabDim( pCube, 14 );\r\n  If( sDim14 @= pSourceDim );\r\n    sDim14 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 15 );\r\n  sDim15 = TabDim( pCube, 15 );\r\n  If( sDim15 @= pSourceDim );\r\n    sDim15 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 16 );\r\n  sDim16 = TabDim( pCube, 16 );\r\n  If( sDim16 @= pSourceDim );\r\n    sDim16 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 17 );\r\n  sDim17 = TabDim( pCube, 17 );\r\n  If( sDim17 @= pSourceDim );\r\n    sDim17 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 18 );\r\n  sDim18 = TabDim( pCube, 18 );\r\n  If( sDim18 @= pSourceDim );\r\n    sDim18 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 19 );\r\n  sDim19 = TabDim( pCube, 19 );\r\n  If( sDim19 @= pSourceDim );\r\n    sDim19 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 20 );\r\n  sDim20 = TabDim( pCube, 20 );\r\n  If( sDim20 @= pSourceDim );\r\n    sDim20 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 21 );\r\n  sDim21 = TabDim( pCube, 21 );\r\n  If( sDim21 @= pSourceDim );\r\n    sDim21 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 22 );\r\n  sDim22 = TabDim( pCube, 22 );\r\n  If( sDim22 @= pSourceDim );\r\n    sDim22 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 23 );\r\n  sDim23 = TabDim( pCube, 23 );\r\n  If( sDim23 @= pSourceDim );\r\n    sDim23 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 24 );\r\n  sDim24 = TabDim( pCube, 24 );\r\n  If( sDim24 @= pSourceDim );\r\n    sDim24 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 25 );\r\n  sDim25 = TabDim( pCube, 25 );\r\n  If( sDim25 @= pSourceDim );\r\n    sDim25 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 26 );\r\n  sDim26 = TabDim( pCube, 26 );\r\n  If( sDim26 @= pSourceDim );\r\n    sDim26 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\nIf( nDimensionCount >= 27 );\r\n  sDim27 = TabDim( pCube, 27 );\r\n  If( sDim27 @= pSourceDim );\r\n    sDim27 = pTargetDim;\r\n  EndIf;\r\nEndIf;\r\n\r\n### Replace dimension ###\r\n\r\nIf( pDebug <= 1 );\r\n\r\n  # Destroy Cube\r\n  CubeDestroy( pCube );\r\n\r\n  # Recreate cube with new dimension\r\n  If( nDimensionCount = 2 );\r\n    CubeCreate( pCube, sDim1, sDim2 );\r\n  ElseIf( nDimensionCount = 3 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3 );\r\n  ElseIf( nDimensionCount = 4 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4 );\r\n  ElseIf( nDimensionCount = 5 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5 );\r\n  ElseIf( nDimensionCount = 6 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6 );\r\n  ElseIf( nDimensionCount = 7 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7 );\r\n  ElseIf( nDimensionCount = 8 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8 );\r\n  ElseIf( nDimensionCount = 9 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9 );\r\n  ElseIf( nDimensionCount = 10 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10 );\r\n  ElseIf( nDimensionCount = 11 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11 );\r\n  ElseIf( nDimensionCount = 12 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12 );\r\n  ElseIf( nDimensionCount = 13 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13 );\r\n  ElseIf( nDimensionCount = 14 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14 );\r\n  ElseIf( nDimensionCount = 15 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15 );\r\n  ElseIf( nDimensionCount = 16 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16 );\r\n  ElseIf( nDimensionCount = 17 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17 );\r\n  ElseIf( nDimensionCount = 18 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18 );\r\n  ElseIf( nDimensionCount = 19 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19 );\r\n  ElseIf( nDimensionCount = 20 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20 );\r\n  ElseIf( nDimensionCount = 21 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21 );\r\n  ElseIf( nDimensionCount = 22 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21, sDim22 );\r\n  ElseIf( nDimensionCount = 23 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21, sDim22, sDim23 );\r\n  ElseIf( nDimensionCount = 24 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21, sDim22, sDim23, sDim24 );\r\n  ElseIf( nDimensionCount = 25 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21, sDim22, sDim23, sDim24, sDim25 );\r\n  ElseIf( nDimensionCount = 26 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21, sDim22, sDim23, sDim24, sDim25, sDim26 );\r\n  ElseIf( nDimensionCount = 27 );\r\n   CubeCreate( pCube, sDim1, sDim2, sDim3, sDim4, sDim5, sDim6, sDim7, sDim8, sDim9, sDim10, sDim11, sDim12, sDim13, sDim14, sDim15,\r\n    sDim16, sDim17, sDim18, sDim19, sDim20, sDim21, sDim22, sDim23, sDim24, sDim25, sDim26, sDim27 );\r\n  EndIf;\r\n\r\nElse;\r\n\r\n  AsciiOutput( sDebugFile, 'Process valid. Dimension not replaced due to debug mode' );\r\n\r\nEndIf;\r\n\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.2~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}