{"Parameters": [{"Prompt": "Dimension", "Type": "String", "Value": "Cost Centre", "Name": "pDimension"}, {"Prompt": "Attribute", "Type": "String", "Value": "Finance", "Name": "pAttribute"}, {"Prompt": "Optional: The name of the consolidation top element", "Type": "String", "Value": "Total Finance", "Name": "pTopNode"}, {"Prompt": "Optional: Prefix before the attribute value", "Type": "String", "Value": "", "Name": "pPrefix"}, {"Prompt": "Optional: Suffix after the attribute value", "Type": "String", "Value": "( Finance )", "Name": "pSuffix"}, {"Prompt": "Boolean: 1 = True unwind current hierarchy.", "Type": "Numeric", "Value": 1, "Name": "pUnwind"}, {"Prompt": "Optional: 1 = Remove empty consoldation from dimension.", "Type": "Numeric", "Value": 0, "Name": "pEmptyConsol"}, {"Prompt": "pDebug", "Type": "Numeric", "Value": 1, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n####################################################################################\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Data.debug';\r\n\r\nEndIf;\r\n\r\n### VALIDATE RECORD ###\r\n\r\n## Skip leaf element\r\nIF(\r\nDTYPE( pDimension, vElement ) @<> 'C' );\r\n  ITEMSKIP;\r\nENDIF;\r\n\r\n## Skip if attribute is not populated.\r\nif(\r\nvElement @= sTopNode );\r\n  ITEMSKIP;\r\nENDIF;\r\n\r\n## Skip if there is no nominated parent element.\r\nsParent = vValue;\r\nIf( sParent @= '' );\r\n  sMsg = 'ItemSkip: No parent.' ;\r\n  AsciiOutput( sDebugFile, vElement, sPrefix, vValue, sSuffix,  sMsg );\r\n  ItemSkip;\r\nEndIf;\r\n\r\n\r\n## Loop through all the parent of the element.\r\n\r\nnIndex = 1;\r\nnLimit = ELPARN( pDimension, vElement );\r\n\r\nWHILE( nIndex <= nLimit );\r\n  sElPar = ELPAR( pDimension, vElement, nIndex );\r\n  IF(\r\n  ELISANC ( pDimension,  sTopNode, sElPar ) = 1 %\r\n  sElPar @= sTopNode );\r\n  ## The parent is a member of the top node or is the top node.\r\n    IF(\r\n    sElPar @<> sPrefix | sParent | sSuffix );\r\n    ## Remove component from the heirarchy.\r\n\r\n      IF(\r\n      pDebug <= 1 );\r\n        sMsg = 'Delete component.';\r\n        AsciiOutput( sDebugFile, vElement, sPrefix, vValue, sSuffix,  sElPar, sMsg );\r\n\r\n      ExecuteProcess('Bedrock.Dim.Element.Component.Delete'\r\n        , 'pDimension', pDimension\r\n        , 'pParent', sElPar\r\n        , 'pElement', vElement\r\n        , 'pDebug', pDebug );\r\n      ENDIF;\r\n\r\n    ELSE;\r\n      IF(\r\n      pDebug <= 1 );\r\n        sMsg = 'Keep Component.' ;\r\n        AsciiOutput( sDebugFile, vElement, sPrefix, vValue, sSuffix,  sElPar, sMsg );\r\n    ENDIF;\r\n\r\n\r\n    ENDIF;\r\n  ENDIF;\r\n  nIndex = nIndex + 1;\r\nEND;", "Variables": [{"Position": 1, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "vElement"}, {"Position": 2, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "vAttribute"}, {"Position": 3, "EndByte": 0, "StartByte": 0, "Type": "String", "Name": "vValue"}], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Dim.Hierarchy.Create.FromAttribute", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n#####################################################################################\r\n\r\n# This process will create a parent rollup attribute for the nominated top node hierarchy\r\n# and populate the value of the immediate parent within the nominated hierarchy for each\r\n# element in the dimension.\r\n\r\n# Note:\r\n# - It is assumed each element exists ONLY ONCE within the hierarchy.\r\n# - This should hold true except in exceptional circumstances\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Dim.Hierarchy.Create.FromAttribute';\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\ncDataView = '}Bedrock_' | cTimeStamp | '_' | sRandomInt ;\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.';\r\ncAttributeDim = '}ElementAttributes_' | pDimension;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Log parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pDimension : ' | pDimension );\r\n  AsciiOutput( sDebugFile, '            pAttribute : ' | pAttribute );\r\n  AsciiOutput( sDebugFile, '              pTopNode : ' | pTopNode );\r\n  AsciiOutput( sDebugFile, '              pPrefix : ' | pPrefix );\r\n  AsciiOutput( sDebugFile, '              pSuffix : ' | pSuffix );\r\n  AsciiOutput( sDebugFile, '            pUnwind    : ' | NumberToString( pUnwind ) );\r\n\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\n## Validate dimension\r\nIf( Trim( pDimension ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No dimension specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\nIf( DimensionExists( pDimension ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Dimension: ' | pDimension | ' does not exist';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\nIf( SUBST( pDimension, 1, 1 ) @= '}' );\r\n  nErrors = 1;\r\n  sMessage = 'Dimension: ' | pDimension | ' is a system dimension.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n\r\n## Validate attribute\r\nIf( \r\nTrim( pAttribute ) @= '' );\r\n  nErrors = 1;\r\n  sMessage = 'No attribute specified';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\nIf( \r\nDimIx( cAttributeDim, pAttribute ) = 0 );\r\n  nErrors = 1;\r\n  sMessage = 'Attribute: ' | pAttribute | ' does not exists in dimension: ' | pDimension;\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\nIf( \r\nDType( cAttributeDim, pAttribute ) @<> 'AS' );\r\n  nErrors = 1;\r\n  sMessage = 'Only string attributes may be used for this process.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  DataSourceType = 'NULL';\r\n  ItemReject( sMessage );\r\nEndIf;\r\n\r\n## Validate Parameter: pEmptyConsol\r\nIF(\r\npEmptyConsol <> 1 & pEmptyConsol <> 0 );\r\n  pEmptyConsol = 0;\r\n  sMessage = 'Remove empty consolidation is Boolean. Reset parameter to 0.';\r\n  If( pDebug >= 1 );\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\nEndIf;\r\n\r\n\r\n## UNWIND the dimension OR Add top node of the hierarchy.\r\nIF(\r\npTopNode @= '' );\r\n  sTopNode = pAttribute;\r\nELSE;\r\n  sTopNode = pTopNode;\r\nENDIF;\r\n\r\nIf( \r\nDimIx( pDimension, sTopNode ) = 0 );\r\n# Target consol does not exist then add element to dimension.\r\n  IF( pDebug <= 1 );\r\n    DimensionELementInsert( pDimension, '', sTopNode, 'C'); \r\n  ENDIF;\r\n\r\n  IF( pDebug >= 1 );\r\n    sMessage = 'New consolidation point added: ' | sTopNode;\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  ENDIF;\r\n\r\nELSEIF(\r\npUnwind = 1 &\r\nElCompN( pDimension, sTopNode ) > 0  );\r\n## The target consolidaiton exists in the dimension, unwind.\r\n  If( pDebug <= 1 );\r\n    ExecuteProcess('Bedrock.Dim.Hierarchy.Unwind.Consolidation'\r\n      , 'pDimension', pDimension\r\n      , 'pConsol', sTopNode\r\n      , 'pRecursive', 1\r\n      , 'pDebug', pDebug );\r\n    EndIf;\r\n\r\n    IF( pDebug >= 1 );\r\n      sMessage = 'Consolidation point unwound: ' | sTopNode;\r\n      AsciiOutput( sDebugFile, sMessage );\r\n    ENDIF;\r\n\r\nELSE;\r\n  ## Do nothing.\r\n\r\nEndIf;\r\n\r\n### Format Prefix and Suffix ###\r\nIF(\r\npPrefix @<> '' );\r\n  IF(\r\n  SUBST( pPrefix, Long( pPrefix), 1) @<> ' ' );\r\n    sPrefix = pPrefix | ' ';\r\n  ELSE;\r\n    sPrefix = pPrefix;\r\n  ENDIF;\r\nENDIF;\r\n\r\nIF(\r\npSuffix @<> '' );\r\n  IF(\r\n  SUBST( pSuffix, 1, 1) @<> ' ' );\r\n    sSuffix = ' ' | pSuffix;\r\n  ELSE;\r\n    sSuffix = pSuffix;\r\n  ENDIF;\r\nENDIF;\r\n\r\n### BUILD DATA SOURCE ###\r\n\r\nIF(\r\nViewExists( cAttributeDim, cDataView ) = 1 );\r\n  ViewDestroy( cAttributeDim, cDataView );\r\nENDIF;\r\nViewCreate( cAttributeDim, cDataView );\r\n\r\nViewExtractSkipCalcsSet( cAttributeDim, cDataView, 0 );\r\nViewExtractSkipRuleValuesSet( cAttributeDim, cDataView,0 );\r\nViewExtractSkipZeroesSet( cAttributeDim, cDataView, 1 );\r\n\r\nsDim = cAttributeDim;\r\nIF(\r\nSubsetExists( sDim, cDataView ) = 1 );\r\n  SubsetDestroy( sDim, cDataView );\r\nENDIF;\r\nSubsetCreate( sDim, cDataView );\r\nSubsetElementInsert( sDim, cDataView, pAttribute, 1 );\r\nViewSubsetAssign(  cAttributeDim, cDataView, sDim, cDataView );\r\n\r\n### Assign Datasource ###\r\n\r\nDataSourceType = 'VIEW';\r\nDatasourceNameForServer = cAttributeDim;\r\nDatasourceNameForClient = cAttributeDim;\r\nDatasourceCubeView = cDataView;\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n#####################################################################################\r\n\r\n\r\n### Check for errors in prolog ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessBreak;\r\nEndIf;\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Metadata.debug';\r\n\r\nEndIf;\r\n\r\n### VALIDATE RECORD ###\r\n\r\n## Skip if attribute is not populated.\r\nif(\r\nvElement @= sTopNode );\r\n  ITEMSKIP;\r\nENDIF;\r\n\r\nsParent = vValue;\r\nIf( sParent @= '' );\r\n  ItemSkip;\r\nEndIf;\r\n\r\n# If parent does not exist AND allow insertion of new parents is TRUE then insert new consol\r\n\r\nsElPar = sPrefix | sParent | sSuffix;\r\n\r\n\r\n\r\nIf( pDebug <= 1 );\r\n\r\n  ## Add the attribute value to the top node.\r\n  DimensionElementComponentAdd( pDimension,  sTopNode, sElPar, 1 );\r\n\r\n  DimensionElementInsert( pDimension, '', sElPar, 'C' );\r\n  DimensionElementComponentAdd( pDimension, sElPar, vElement, 1 );\r\nEndIf;\r\n\r\nIf( pDebug >= 1 );\r\n    sMsg = 'Added to the Hierarchy.';\r\n    AsciiOutput( sDebugFile, vElement, sElPar, vElement, sMsg );\r\nEndif;\r\n\r\n\r\n\r\n\r\n### End Metadata ###", "DataSource": {"view": "Temp", "dataSourceNameForServer": "}ElementAttributes_}Clients", "dataSourceNameForClient": "}ElementAttributes_}Clients", "Type": "TM1CubeView"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n#####################################################################################\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n### Destroy temporary views and susbsets ###\r\nIf( pDebug <= 1 );\r\n  ExecuteProcess('Bedrock.Cube.ViewAndSubsets.Delete',\r\n    'pCube', cAttributeDim,\r\n    'pView', cDataView,\r\n    'pSubset', cDataView,\r\n    'pMode', 1,\r\n    'pDebug', pDebug);\r\nENDIF;\r\n\r\n### Clean Empty consolidation.\r\nIF(\r\npEmptyConsol = 1 );\r\n\r\n  If( pDebug <= 1 );\r\n    ExecuteProcess('Bedrock.Dim.EmptyConsols.Delete'\r\n      , 'pDimension', pDimension\r\n      , 'pDebug', pDebug );\r\n  EndIf;\r\n\r\n  If( pDebug >= 1 );\r\n    sMsg = 'Removed empty consolidations.';\r\n    AsciiOutput( sDebugFile, sMsg );\r\n  Endif;\r\nENDIF;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\n\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": ["VarType=32\fColType=827\f", "VarType=32\fColType=827\f", "VarType=32\fColType=827\f"]}