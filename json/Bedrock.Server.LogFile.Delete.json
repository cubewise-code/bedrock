{"Parameters": [{"Prompt": "Log file directory. (Blank = from TM1 configuration file)", "Type": "String", "Value": "", "Name": "pLogDir"}, {"Prompt": "The number of days to retain log Files", "Type": "Numeric", "Value": 7, "Name": "pLogDays"}, {"Prompt": "The number of day to retain TM1 Error Logs", "Type": "Numeric", "Value": 21, "Name": "pErrorDays"}, {"Prompt": "The number of days to retain Bedrock Debug Files", "Type": "Numeric", "Value": 7, "Name": "pBedrockDays"}, {"Prompt": "The number of days to retain CSV files", "Type": "Numeric", "Value": 7, "Name": "pCSVDays"}, {"Prompt": "Debug Mode", "Type": "Numeric", "Value": 0, "Name": "pDebug"}], "DataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "Variables": [], "HasSecurityAccess": true, "UIData": "CubeAction=1511\fDataAction=1503\fCubeLogChanges=0\f", "Name": "Bedrock.Server.LogFile.Delete", "PrologProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n#####################################################################################\r\n\r\n# This process will back up the Data Directory\r\n\r\n\r\n### Constants ###\r\n\r\ncProcess = 'Bedrock.Server.LogFile.Delete';\r\ncTimeStamp = TimSt( Now, '\\Y\\m\\d\\h\\i\\s' );\r\nsRandomInt = NumberToString( INT( RAND( ) * 1000 ));\r\ncDebugFile = GetProcessErrorFileDirectory | cProcess | '.' | cTimeStamp | '.' | sRandomInt ;\r\n\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Set debug file name\r\n  sDebugFile = cDebugFile | 'Prolog.debug';\r\n\r\n  # Log start time\r\n  AsciiOutput( sDebugFile, 'Process Started: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\n  # Output parameters\r\n  AsciiOutput( sDebugFile, 'Parameters: pLogFile:     ' | pLogDir );\r\n  AsciiOutput( sDebugFile, '            pLogDays:     ' | NumberToString( pLogDays) );\r\n  AsciiOutput( sDebugFile, '            pErrorDays:   ' | NumberToString( pErrorDays ) );\r\n  AsciiOutput( sDebugFile, '            pBedrockDays: ' | NumberToString( pBedrockDays ) );\r\n  AsciiOutput( sDebugFile, '            pCSVDays:     ' | NumberToString( pCSVDays ) );\r\n\r\nEndIf;\r\n\r\n\r\n### Validate Parameters ###\r\n\r\nnErrors = 0;\r\n\r\nIF(\r\npLogDir @= '');\r\n  pLogDir = GetProcessErrorFileDirectory;\r\nELSE;\r\n  ## Remove leading and/or trailing spaces\r\n  pLogDir = Trim( pLogDir );\r\nENDIF;\r\n\r\n## Remove trailing \\ from directory names if present\r\nIf(\r\nSubSt( pLogDir, Long( pLogDir ), 1 ) @= '\\' );\r\n  pLogDir = SubSt( pLogDir, 1, Long( pLogDir ) - 1 );\r\nEndIf;\r\n\r\n# Check that target Logging Directory exists\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Target Directory: ' |  pLogDir );\r\nENDIF;\r\n\r\nIf( FileExists( pLogDir ) = 0 );\r\n  If( pDebug >= 1 );\r\n    nErrors = 1;\r\n    sMessage = 'Logging directory does not exist: ' | pLogDir;\r\n    AsciiOutput( sDebugFile, sMessage );\r\n  EndIf;\r\n  ProcessQuit;\r\nEndIf;\r\n\r\nsLogDays = NumberToString( ROUND( pLogDays ) );\r\nsErrorDays = NumberToString( ROUND( pErrorDays ) );\r\nsBedrockDays = NumberToString( ROUND( pBedrockDays ) );\r\nsCSVDays = NumberToString( ROUND( pCSVDays ) );\r\n\r\n### Save the model to disk\r\nExecuteProcess( 'Bedrock.Server.SaveDataAll' );\r\n\r\n### Create Execute File File ###\r\nDatasourceASCIIQuoteCharacter='';\r\n\r\n\r\nIf( pDebug >= 1 );\r\n  ASCIIOUTPUT( sDebugFile, '' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m tm1s*.log -d -' | sLogDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m tm1auditstore*.log -d -' | sLogDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m TM1ProcessError*.log -d -' | sErrorDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m Bedrock*.* -d -' | sBedrockDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m *.csv -d -' | sCSVDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m *.cma -d -' | sCSVDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sDebugFile, 'forfiles -p \"'| pLogDir |'\" -s -m *.txt -d -' | sCSVDays | ' -c \"cmd /c del @path\"' );\r\nENDIF;\r\nIf( pDebug <= 1 );\r\n  sFileName = 'Bedrock Remove Logs.bat';\r\n  ASCIIOUTPUT( sDebugFile, 'Echo Off' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m tm1s*.log -d -' | sLogDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m tm1auditstore*.log -d -' | sLogDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m TM1ProcessError*.log -d -' | sErrorDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m Bedrock*.* -d -' | sBedrockDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m *.csv -d -' | sCSVDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m *.cma -d -' | sCSVDays | ' -c \"cmd /c del @path\"' );\r\n  ASCIIOUTPUT( sFileName, 'forfiles -p \"'| pLogDir |'\" -s -m *.txt -d -' | sCSVDays | ' -c \"cmd /c del @path\"' );\r\nENDIF;\r\n\r\n### End Prolog ###", "MetadataProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****", "DataSource": {"Type": "None"}, "EpilogProcedure": "\r\n#****Begin: Generated Statements***\r\n#****End: Generated Statements****\r\n\r\n#####################################################################################\r\n##~~Copyright bedrocktm1.org 2011 www.bedrocktm1.org/how-to-licence.php Ver 3.0.0~~##\r\n#####################################################################################\r\n\r\n# Set debug file name\r\nsDebugFile = cDebugFile | 'Epilog.debug';\r\n\r\n### Copy Data Dir to Backup ###\r\nsCommand = sFileName;\r\n\r\nIf( pDebug >= 1 );\r\n  AsciiOutput( sDebugFile, 'Execute Command: ' | sCommand );\r\nEndIf;\r\n\r\nIf( pDebug <= 1 );\r\n  ExecuteCommand ( sCommand, 1 );\r\n  ASCIIDelete( sFileName);\r\nEndIf;\r\n\r\n\r\n### Initialise Debug ###\r\n\r\nIf( pDebug >= 1 );\r\n\r\n  # Log errors\r\n  If( nErrors <> 0 );\r\n    AsciiOutput( sDebugFile, 'Errors Occurred' );\r\n  EndIf;\r\n\r\n  # Log finish time\r\n  AsciiOutput( sDebugFile, 'Process Finished: ' | TimSt( Now, '\\d-\\m-\\Y \\h:\\i:\\s' ) );\r\n\r\nEndIf;\r\n\r\n\r\n### If errors occurred terminate process with a major error status ###\r\n\r\nIf( nErrors <> 0 );\r\n  ProcessQuit;\r\nEndIf;\r\n\r\n\r\n### End Epilog ###", "VariablesUIData": []}